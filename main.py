#MAX MARTIN
#Simple calculator app using tkinter

#btw i didnt follow any tutorials for this
#also nothing is generated by ai, all written by me
#i did have to ask chatgpt about the correct syntax to do the readonly entry thing tho
#but other than that its all me :)
#this took about 2 hours to make
import tkinter as tk

#setup the window
root = tk.Tk()
root.title("Calculator App Thing") 
root.geometry("415x480")
root.resizable(False, False)

#calculator button layout
#TOP DISPLAY HERE
#7 8 9 x
#4 5 6 -
#1 2 3 +
#0 . = /

displayFont = "Arial", 36

#displayInfo holds the value that is shown in the display
displayInfo = tk.StringVar()
#readonly stops you from typing in the display
#justify right make the text stay on the right side
display = tk.Entry(font=displayFont, width=15, borderwidth=5, state="readonly", justify="right", textvariable=displayInfo)
#put at top and across 4 columns
display.grid(row=0, column=0, columnspan=4)


#clear the screen after pressing = or getting an eerror
clearDisplayOnNextButtonInput = False
def ClearDisplay():
    #i have to change the state so i can change the variable but keep it readonly for the user
    display.config(state="normal")
    displayInfo.set("")
    display.config(state="readonly")


def OnButtonClicked(buttonValue):
    #clear the screen if already has stuff from a previous calc
    global clearDisplayOnNextButtonInput
    if clearDisplayOnNextButtonInput:
        ClearDisplay()
        clearDisplayOnNextButtonInput = False

    #if equals was clicked do the maths
    if buttonValue == "=":
        clearDisplayOnNextButtonInput = True
        OnEqualsClicked()
        return

    #get the val in the display
    currentValue = displayInfo.get()
    #append it to the display
    newValue = currentValue + str(buttonValue)

    #put the new value in the display
    display.config(state="normal")
    displayInfo.set(newValue)
    display.config(state="readonly")

def OnEqualsClicked():
    #get the current value on the disply
    currentValue = displayInfo.get()
    #try/catch so it dosnt crash :)
    #basicly eval() takes a string and does the maths in it
    #if it fails it will go to except
    #if successful it will show the result on the displuy
    try:
        #do the maths and tirn into a string
        #this is the point that would fail, eval() is a built in function
        result = str(eval(currentValue))
        
        #show the result
        display.config(state="normal")
        displayInfo.set(result)
        display.config(state="readonly")

    #if there is an error with eval() display error rather than breaking :)
    #also this works for divide by 0 exeption as well as general syntax errors
    except Exception:
            display.config(state="normal")
            displayInfo.set("Syntax Error")
            display.config(state="readonly")


#makes it esily change later
buttonFont = "Arial", 24
buttonWidth = 4
buttonHeight = 2

#number buttons
button_0 = tk.Button(text="0", font=buttonFont, width=buttonWidth, height=buttonHeight)
button_1 = tk.Button(text="1", font=buttonFont, width=buttonWidth, height=buttonHeight)
button_2 = tk.Button(text="2", font=buttonFont, width=buttonWidth, height=buttonHeight)
button_3 = tk.Button(text="3", font=buttonFont, width=buttonWidth, height=buttonHeight)
button_4 = tk.Button(text="4", font=buttonFont, width=buttonWidth, height=buttonHeight)
button_5 = tk.Button(text="5", font=buttonFont, width=buttonWidth, height=buttonHeight)
button_6 = tk.Button(text="6", font=buttonFont, width=buttonWidth, height=buttonHeight)
button_7 = tk.Button(text="7", font=buttonFont, width=buttonWidth, height=buttonHeight)
button_8 = tk.Button(text="8", font=buttonFont, width=buttonWidth, height=buttonHeight)
button_9 = tk.Button(text="9", font=buttonFont, width=buttonWidth, height=buttonHeight)

#symbol buttons
button_multiply = tk.Button(text="*", font=buttonFont, width=buttonWidth, height=buttonHeight)
button_minus = tk.Button(text="-", font=buttonFont, width=buttonWidth, height=buttonHeight)
button_add = tk.Button(text="+", font=buttonFont, width=buttonWidth, height=buttonHeight)
button_divide = tk.Button(text="/", font=buttonFont, width=buttonWidth, height=buttonHeight)
button_dot = tk.Button(text=".", font=buttonFont, width=buttonWidth, height=buttonHeight)
button_equals = tk.Button(text="=", font=buttonFont, width=buttonWidth, height=buttonHeight)

#when the button is clicked it will call the butnclicked function with its value (as str)
button_0.config(command=lambda: OnButtonClicked(0))
button_1.config(command=lambda: OnButtonClicked(1))
button_2.config(command=lambda: OnButtonClicked(2))
button_3.config(command=lambda: OnButtonClicked(3))
button_4.config(command=lambda: OnButtonClicked(4))
button_5.config(command=lambda: OnButtonClicked(5))
button_6.config(command=lambda: OnButtonClicked(6))
button_7.config(command=lambda: OnButtonClicked(7))
button_8.config(command=lambda: OnButtonClicked(8))
button_9.config(command=lambda: OnButtonClicked(9))

button_multiply.config(command=lambda: OnButtonClicked("*"))
button_minus.config(command=lambda: OnButtonClicked("-"))
button_add.config(command=lambda: OnButtonClicked("+"))
button_divide.config(command=lambda: OnButtonClicked("/"))
button_dot.config(command=lambda: OnButtonClicked("."))
button_equals.config(command=lambda: OnButtonClicked("="))


#put buttons in grid
#stick nsew makes the button fill
#padding adds space beteeeen butns
buttonPadding = 2
button_0.grid(row=4, column=0, sticky="nsew", padx=buttonPadding, pady=buttonPadding)
button_dot.grid(row=4, column=1, sticky="nsew", padx=buttonPadding, pady=buttonPadding)
button_equals.grid(row=4, column=2, sticky="nsew", padx=buttonPadding, pady=buttonPadding)
button_divide.grid(row=4, column=3, sticky="nsew", padx=buttonPadding, pady=buttonPadding)
button_1.grid(row=3, column=0, sticky="nsew", padx=buttonPadding, pady=buttonPadding)
button_2.grid(row=3, column=1, sticky="nsew", padx=buttonPadding, pady=buttonPadding)
button_3.grid(row=3, column=2, sticky="nsew", padx=buttonPadding, pady=buttonPadding)
button_add.grid(row=3, column=3, sticky="nsew", padx=buttonPadding, pady=buttonPadding)
button_4.grid(row=2, column=0, sticky="nsew", padx=buttonPadding, pady=buttonPadding)
button_5.grid(row=2, column=1, sticky="nsew", padx=buttonPadding, pady=buttonPadding)
button_6.grid(row=2, column=2, sticky="nsew", padx=buttonPadding, pady=buttonPadding)
button_minus.grid(row=2, column=3, sticky="nsew", padx=buttonPadding, pady=buttonPadding)
button_7.grid(row=1, column=0, sticky="nsew", padx=buttonPadding, pady=buttonPadding)
button_8.grid(row=1, column=1, sticky="nsew", padx=buttonPadding, pady=buttonPadding)
button_9.grid(row=1, column=2, sticky="nsew", padx=buttonPadding, pady=buttonPadding)
button_multiply.grid(row=1, column=3, sticky="nsew", padx=buttonPadding, pady=buttonPadding)

#Note to self,
#i should probablyhave used a loop to put init the buttons
# but i guess its to late now :(

root.mainloop()